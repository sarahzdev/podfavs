{"version":3,"sources":["components/PodcastItem.js","components/FeaturedPodcasts.js","components/SearchBar.js","components/Footer.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Card","styled","div","_templateObject","width","@media (min-width: 576px)","padding","PodcastItem","_templateObject2","paddingLeft","paddingRight","paddingTop","paddingBottom","p","_templateObject3","color","fontSize","_templateObject4","fontWeight","marginBottom","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opacity","handleMouseEnter","bind","assertThisInitialized","handleMouseLeave","inherits","createClass","key","value","setState","aPodcast","podcast","react_default","a","createElement","src","imageUrl","alt","Component","CardDeck","FeaturedPodcasts_templateObject","display","flexWrap","marginLeft","marginRight","FeaturedPodcasts","cards","podcastList","map","push","components_PodcastItem","id","Nav","nav","SearchBar_templateObject","alignItems","justifyContent","backgroundColor","boxShadow","IconTitle","span","SearchBar_templateObject2","Search","SearchBar_templateObject3","borderBottomWidth","borderColor","Input","input","SearchBar_templateObject4","appearance","borderStyle","lineHeight",":focus","outline","Button","button","_templateObject5",":hover","borderRadius","SearchBar","handleChange","handleSubmit","event","onHandleChange","target","preventDefault","onHandleSubmit","className","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","onSubmit","type","placeholder","userInput","onChange","aria-label","cx","cy","r","x1","y1","x2","y2","FooterDiv","footer","Footer_templateObject","marginTop","Footer_templateObject2","Footer","Footer_Button","Main","main","Home_templateObject","Container","Home_templateObject2","minHeight","maxWidth","Home","title","isLoading","_this2","fetch","then","response","json","data","content","_this3","url","encodeURI","console","log","Fragment","core_browser_esm","styles","css","Home_templateObject3","margin","fontFamily","components_SearchBar","components_FeaturedPodcasts","components_Footer","App","BrowserRouter","Switch","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5819087.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"tailwind.macro\";\r\n\r\n// A card that provides information about a podcast.\r\nconst Card = styled.div`\r\n  ${tw`w-1/2 sm:w-1/5 p-2`};\r\n`;\r\n\r\nconst Info = styled.div`\r\n  ${tw`px-6 py-4`};\r\n`;\r\n\r\nconst Descrip = styled.p`\r\n  ${tw`text-grey-darker text-base`};\r\n`;\r\n\r\nconst Title = styled.div`\r\n  ${tw`font-bold text-xl mb-2`};\r\n`;\r\n\r\nexport class PodcastItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { opacity: 0 };\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n  }\r\n\r\n  handleMouseEnter() {\r\n    this.setState(state => ({\r\n      opacity: 1\r\n    }));\r\n  }\r\n\r\n  handleMouseLeave() {\r\n    this.setState(state => ({\r\n      opacity: 0\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const aPodcast = this.props.podcast;\r\n\r\n    return (\r\n      <Card>\r\n        <img\r\n          src={aPodcast.imageUrl}\r\n          alt=\"podcast cover\"\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nPodcastItem.propTypes = {\r\n  podcast: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PodcastItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"tailwind.macro\";\r\nimport PodcastItem from \"./PodcastItem\";\r\n\r\n//Render a list of podcasts.\r\nconst CardDeck = styled.div`\r\n  ${tw`flex flex-wrap -mx-2`};\r\n`;\r\n\r\nclass FeaturedPodcasts extends Component {\r\n  render() {\r\n    const cards = [];\r\n    this.props.podcastList.map(podcast =>\r\n      cards.push(<PodcastItem key={podcast.id} podcast={podcast} />)\r\n    );\r\n\r\n    // populate the table with podcast components\r\n    return <CardDeck>{cards}</CardDeck>;\r\n  }\r\n}\r\n\r\nFeaturedPodcasts.propTypes = {\r\n  podcastList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default FeaturedPodcasts;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"tailwind.macro\";\r\n\r\n// Allow the user to get podcast recommendations by inputting keywords.\r\nconst Nav = styled.nav`\r\n  ${tw`flex flex-wrap w-full items-center justify-between bg-indigo-darker shadow px-8 py-4 mb-8`};\r\n`;\r\n\r\nconst IconTitle = styled.span`\r\n  ${tw`font-semibold text-2xl text-indigo-lightest`};\r\n`;\r\n\r\nconst Search = styled.div`\r\n  ${tw`flex items-center border-b border-b-2 border-indigo-light`}\r\n`;\r\n\r\nconst Input = styled.input`\r\n  ${tw`appearance-none bg-transparent border-none w-full text-indigo-lightest mr-3 py-1 px-2 leading-tight focus:outline-none`};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  ${tw`border-none text-indigo-lighter hover:text-indigo rounded leading-tight`};\r\n`;\r\n\r\nexport class SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onHandleChange(event.target.value);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onHandleSubmit();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Nav>\r\n        <div className=\"hidden sm:block\">\r\n          <IconTitle>podfavs</IconTitle>\r\n        </div>\r\n        <div className=\"block sm:hidden\">\r\n          <Button>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              className=\"feather feather-home\"\r\n            >\r\n              <title>home</title>\r\n              <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" />\r\n              <polyline points=\"9 22 9 12 15 12 15 22\" />\r\n            </svg>\r\n          </Button>\r\n        </div >\r\n        <div className=\"w-3/5\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <Search>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Find your new favorite podcast by name and keywords...\"\r\n                value={this.props.userInput}\r\n                onChange={this.handleChange}\r\n                aria-label=\"Search\"\r\n              />\r\n              <Button>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  className=\"feather feather-search\"\r\n                >\r\n                  <title>search</title>\r\n                  <circle cx=\"11\" cy=\"11\" r=\"8\" />\r\n                  <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\r\n                </svg>\r\n              </Button>\r\n            </Search>\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <Button>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              className=\"feather feather-log-in\"\r\n            >\r\n              <title>login</title>\r\n              <path d=\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\" />\r\n              <polyline points=\"10 17 15 12 10 7\" />\r\n              <line x1=\"15\" y1=\"12\" x2=\"3\" y2=\"12\" />\r\n            </svg>\r\n          </Button>\r\n        </div>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"tailwind.macro\";\r\n\r\n//Render a list of podcasts.\r\nconst FooterDiv = styled.footer`\r\n  ${tw`flex w-full mt-8 p-4 justify-center items-center bg-indigo-darker text-indigo-lighter shadow`};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  ${tw`border-none text-indigo-lighter hover:text-indigo rounded leading-tight`};\r\n`;\r\n\r\nconst Footer = () => (\r\n  // populate the table with podcast components\r\n  <FooterDiv>\r\n    <span className=\"mr-2\">Check out the project on</span>\r\n    <Button>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        className=\"feather feather-github\"\r\n      >\r\n        <title>github</title>\r\n        <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\" />\r\n      </svg>\r\n    </Button>\r\n  </FooterDiv>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Global, css } from \"@emotion/core\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"tailwind.macro\";\r\nimport FeaturedPodcasts from \"./FeaturedPodcasts\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Footer from \"./Footer\";\r\n\r\n// Landing page with a search bar and default list of podcasts.\r\nconst Main = styled.main`\r\n  ${tw`flex flex-wrap w-full h-full justify-center bg-indigo-darkest`};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  ${tw`min-h-screen w-full mx-5 max-w-2xl`};\r\n`;\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      podcastList: [],\r\n      userInput: \"\",\r\n      title: \"Featured podcasts\",\r\n      isLoading: true\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    fetch(\"api/\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({ podcastList: data.content, isLoading: false })\r\n      );\r\n  }\r\n\r\n  handleChange(userInput) {\r\n    this.setState({ userInput: userInput });\r\n  }\r\n\r\n  handleSubmit() {\r\n    var url = \"api/search/\" + encodeURI(this.state.userInput);\r\n    console.log(url);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({ podcastList: data, title: \"Podcasts you might like\" })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n    return (\r\n      <>\r\n        <Global\r\n          styles={css`\r\n            *,\r\n            *:before,\r\n            *:after {\r\n              box-sizing: inherit;\r\n            }\r\n            html {\r\n              text-rendering: optimizeLegibility;\r\n              box-sizing: border-box;\r\n              -ms-overflow-style: scrollbar;\r\n              -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n              -webkit-font-smoothing: antialiased;\r\n              -moz-osx-font-smoothing: grayscale;\r\n            }\r\n            html,\r\n            body {\r\n              ${tw`p-0 m-0 font-sans bg-indigo-lightest`};\r\n            }\r\n            h2 {\r\n              ${tw`my-4 font-sans text-3xl sm:text-4xl text-indigo-lighter`};\r\n            }\r\n          `}\r\n        />\r\n        <Main>\r\n          <SearchBar\r\n            userInput={this.state.userInput}\r\n            onHandleChange={this.handleChange}\r\n            onHandleSubmit={this.handleSubmit}\r\n          />\r\n          <Container>\r\n            <h2>{this.state.title}</h2>\r\n            <FeaturedPodcasts podcastList={this.state.podcastList} />\r\n          </Container>\r\n          <Footer />\r\n        </Main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport './App.css';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Route renders UI when app location matches the path\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path='/' exact={true} component={Home}/>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}